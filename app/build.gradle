apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "co.com.ceiba.mobile.pruebadeingreso"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner 'com.audhil.medium.gweatherapp.runner.UiRunner'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    dataBinding {
        enabled = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'com.google.code.gson:gson:2.8.4'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.3.0'
    //Unit test
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test:rules:1.1.1'

    def jUnitVersion = "4.12"
    def archCoreVersion = '1.1.1'
    testImplementation 'junit:junit:' + jUnitVersion,
            'android.arch.core:core-testing:' + archCoreVersion

    def testRunnerVersion = '1.1.1'
    def extTestRunnerVersion = '1.1.0'
    def espressoVersion = '3.1.1'
    androidTestImplementation 'androidx.test.ext:junit:' + extTestRunnerVersion,
            'androidx.test:rules:' + testRunnerVersion,
            'androidx.test.espresso:espresso-core:' + espressoVersion

    def mockWebServerVersion = '3.14.2'
    androidTestImplementation('com.squareup.okhttp3:mockwebserver:' + mockWebServerVersion) {
        exclude group: "com.squareup.okhttp3"
    }

    //  mockk
    def mockKVersion = '1.9.3'
    testImplementation 'io.mockk:mockk:' + mockKVersion

    //Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    //Retrofit and GSON
    def retrofitVersion = '2.3.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'

    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"

    //Reactive x
    def rxJavaVersion = "2.1.1"
    implementation "io.reactivex.rxjava2:rxandroid:$rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxjava:2.2.6"

    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'

    implementation 'androidx.multidex:multidex:2.0.0'

    //Android Room
    def room_version = "2.2.6"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    // dagger2
    def daggerVersion = '2.24'
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    //Lifecycle
    def lifecycle_version = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    implementation 'androidx.multidex:multidex:2.0.0'
}
